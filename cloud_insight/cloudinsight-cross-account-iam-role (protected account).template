{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Alert Logic Cross-Account Role for Cloud Insight. Creates IAM role/policy.",
  "Parameters": {
    "AlertLogicDatacenter": {
      "Description": "Alert Logic Datacenter into which your account was deployed.",
      "AllowedValues": [
        "US",
        "EU"
      ],
      "Default": "US",
      "Type": "String"
    },
    "ExternalID": {
      "Description": "A unique identifier that is used by AlertLogic when assuming roles in the account. This is entered into the Alert Logic Portal later on. More information can be found on the following page in AWS's IAM Documentation: http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html",
      "AllowedPattern": "[\\w+=,.@:\\/-]*",
      "ConstraintDescription": "The format for this parameter is a string of characters consisting of 2-1224 upper and lower case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:\\/-",
      "MinLength": 2,
      "MaxLength": 1224,
      "Type": "String",
      "NoEcho": "true"
    }
  },
  "Mappings": {
    "AlertLogic": {
      "Datacenter": {
        "US": "arn:aws:iam::733251395267:root",
        "EU": "arn:aws:iam::857795874556:root"
      }
    }
  },
  "Resources": {
    "AlertLogicRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [{
            "Action": "sts:AssumeRole",
            "Condition": {
              "StringEquals": {
                "sts:ExternalId": {
                  "Ref": "ExternalID"
                }
              }
            },
            "Effect": "Allow",
            "Principal": {
              "AWS": [{
                "Fn::FindInMap": ["AlertLogic", "Datacenter", {
                  "Ref": "AlertLogicDatacenter"
                }]
              }]
            },
            "Sid": ""
          }],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [{
          "PolicyDocument": {
            "Statement": [{
                "Sid": "EnabledDiscoveryOfVariousAWSServices",
                "Effect": "Allow",
                "Action": [
                  "autoscaling:Describe*",
                  "cloudformation:DescribeStack*",
                  "cloudformation:GetTemplate",
                  "cloudformation:ListStack*",
                  "cloudfront:Get*",
                  "cloudfront:List*",
                  "cloudwatch:Describe*",
                  "directconnect:Describe*",
                  "dynamodb:ListTables",
                  "ec2:Describe*",
                  "elasticbeanstalk:Describe*",
                  "elasticache:Describe*",
                  "elasticloadbalancing:Describe*",
                  "elasticmapreduce:DescribeJobFlows",
                  "glacier:ListVaults",
                  "events:Describe*",
                  "events:List*",
                  "guardduty:Describe*",
                  "guardduty:Get*",
                  "guardduty:List*",
                  "kinesis:Describe*",
                  "kinesis:List*",
                  "lambda:List*",
                  "logs:Describe*",
                  "rds:Describe*",
                  "rds:DownloadDBLogFilePortion",
                  "rds:ListTagsForResource",
                  "redshift:Describe*",
                  "route53:GetHostedZone",
                  "route53:ListHostedZones",
                  "route53:ListResourceRecordSets",
                  "sdb:DomainMetadata",
                  "sdb:ListDomains",
                  "s3:ListAllMyBuckets",
                  "s3:ListBucket",
                  "s3:GetBucketLocation",
                  "s3:GetObject",
                  "s3:GetBucket*",
                  "s3:GetLifecycleConfiguration",
                  "s3:GetObjectAcl",
                  "s3:GetObjectVersionAcl"
                ],
                "Resource": "*"
              },
              {
                "Sid": "EnableInsightDiscovery",
                "Effect": "Allow",
                "Action": [
                  "iam:Get*",
                  "iam:List*",
                  "iam:ListRoles",
                  "iam:GetRolePolicy",
                  "iam:GetAccountSummary",
                  "iam:GenerateCredentialReport"
                ],
                "Resource": "*"
              },
              {
                "Sid": "EnableCloudTrailIfAccountDoesntHaveCloudTrailsEnabled",
                "Effect": "Allow",
                "Action": [
                  "cloudtrail:*"
                ],
                "Resource": "*"
              },
              {
                "Sid": "CreateCloudTrailS3BucketIfCloudTrailsAreBeingSetupByAlertLogic",
                "Effect": "Allow",
                "Action": [
                  "s3:CreateBucket",
                  "s3:PutBucketPolicy",
                  "s3:DeleteBucket"
                ],
                "Resource": "arn:aws:s3:::outcomesbucket-*"
              },
              {
                "Sid": "CreateCloudTrailsTopicTfOneWasntAlreadySetupForCloudTrails",
                "Effect": "Allow",
                "Action": [
                  "sns:CreateTopic",
                  "sns:DeleteTopic"
                ],
                "Resource": "arn:aws:sns:*:*:outcomestopic"
              },
              {
                "Sid": "MakeSureThatCloudTrailsSnsTopicIsSetupCorrectlyForCloudTrailPublishingAndSqsSubsription",
                "Effect": "Allow",
                "Action": [
                  "sns:addpermission",
                  "sns:gettopicattributes",
                  "sns:listtopics",
                  "sns:settopicattributes",
                  "sns:subscribe"
                ],
                "Resource": "arn:aws:sns:*:*:*"
              },
              {
                "Sid": "CreateAlertLogicSqsQueueToSubscribeToCloudTrailsSnsTopicNotifications",
                "Effect": "Allow",
                "Action": [
                  "sqs:CreateQueue",
                  "sqs:DeleteQueue",
                  "sqs:SetQueueAttributes",
                  "sqs:GetQueueAttributes",
                  "sqs:ListQueues",
                  "sqs:ReceiveMessage",
                  "sqs:DeleteMessage",
                  "sqs:GetQueueUrl"
                ],
                "Resource": "arn:aws:sqs:*:*:outcomesbucket*"
              },
              {
                "Sid": "EnableAlertLogicSecurityInfrastructureDeployment",
                "Effect": "Allow",
                "Action": [
                  "ec2:CreateTags",
                  "ec2:CreateSubnet",
                  "ec2:CreateInternetGateway",
                  "ec2:AttachInternetGateway",
                  "ec2:CreateRoute",
                  "ec2:CreateRouteTable",
                  "ec2:AssociateRouteTable",
                  "ec2:CreateSecurityGroup",
                  "ec2:CreateKeyPair",
                  "ec2:ImportKeyPair",
                  "ec2:CreateNetworkAclEntry"
                ],
                "Resource": "*"
              },
              {
                "Sid": "ModifyNetworkSettingsToEnableNetworkVisibilityFromAlertLogicSecurityAppliance",
                "Effect": "Allow",
                "Action": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:AuthorizeSecurityGroupEgress",
                  "ec2:RevokeSecurityGroupIngress",
                  "ec2:RevokeSecurityGroupEgress",
                  "ec2:DeleteSecurityGroup",
                  "ec2:DeleteNetworkAclEntry",
                  "ec2:DeleteRouteTable"
                ],
                "Resource": [
                  "arn:aws:ec2:*:*:security-group/*",
                  "arn:aws:ec2:*:*:route-table/*",
                  "arn:aws:ec2:*:*:network-acl/*"
                ],
                "Condition": {
                  "StringEquals": {
                    "ec2:ResourceTag/AlertLogic": "Security"
                  }
                }
              },
              {
                "Sid": "DeleteSecuritySubnet",
                "Effect": "Allow",
                "Action": [
                  "ec2:DeleteSubnet"
                ],
                "Resource": "*"
              },
              {
                "Sid": "EnabledLaunchingAlertLogicSecurityAppliancesInAlertLogicSubnet",
                "Effect": "Allow",
                "Action": [
                  "ec2:RunInstances"
                ],
                "Resource": "arn:aws:ec2:*:*:subnet/*",
                "Condition": {
                  "StringEquals": {
                    "ec2:ResourceTag/AlertLogic": "Security"
                  }
                }
              },
              {
                "Sid": "EnabledLaunchingAlertLogicSecurityAppliancesFromAlertLogicAmi",
                "Effect": "Allow",
                "Action": [
                  "ec2:RunInstances"
                ],
                "Resource": "arn:aws:ec2:*::image/ami-*",
                "Condition": {
                  "StringEquals": {
                    "ec2:Owner": "733251395267"
                  }
                }
              },
              {
                "Sid": "EnsureThatAlertLogicApplianceCanCreateNecessaryResources",
                "Effect": "Allow",
                "Action": [
                  "ec2:RunInstances"
                ],
                "Resource": [
                  "arn:aws:ec2:*:*:instance/*",
                  "arn:aws:ec2:*:*:volume/*",
                  "arn:aws:ec2:*:*:network-interface/*",
                  "arn:aws:ec2:*:*:key-pair/*",
                  "arn:aws:ec2:*:*:security-group/*"
                ]
              },
              {
                "Sid": "EnabletAlertLogicApplianceStateManagement",
                "Effect": "Allow",
                "Action": [
                  "ec2:TerminateInstances",
                  "ec2:StartInstances",
                  "ec2:StopInstances"
                ],
                "Resource": "arn:aws:ec2:*:*:instance/*",
                "Condition": {
                  "StringEquals": {
                    "ec2:ResourceTag/AlertLogic": "Security"
                  }
                }
              },
              {
                "Sid": "EnableAlertLogicAutoScalingGroup",
                "Effect": "Allow",
                "Action": [
                  "autoscaling:CreateLaunchConfiguration",
                  "autoscaling:DeleteLaunchConfiguration",
                  "autoscaling:CreateAutoScalingGroup",
                  "autoscaling:DeleteAutoScalingGroup"
                ],
                "Resource": "*"
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": "alertlogic-cloudinsight-iam-policy"
        }]
      },
      "Type": "AWS::IAM::Role"
    }
  },
  "Outputs": {
    "ExternalID": {
      "Description": "External ID used by Alert Logic to assume your new Cross-Account IAM role.",
      "Value": {
        "Ref": "ExternalID"
      }
    },
    "RoleARN": {
      "Description": "Amazon Resource Name of your new Cross-Account IAM Role.",
      "Value": {
        "Fn::GetAtt": [
          "AlertLogicRole",
          "Arn"
        ]
      }
    }
  }
}